/* Always fill the document 100%, this is so that the footer is always at the
 * bottom - even if the content hasn't filled the whole height of the screen. */
html {
	height: 100%;
}

/* Fill the body height 100%, this is for the same reason as above.
 * Also, remove margin and padding that some browsers add. The position is set
 * as relative so it'll fill the html-elements height. */
body {
	margin: 0;
	padding: 0;
	background-color: #f2f2ef; /* Background for the whole web site. */
	min-height: 100%;
	position: relative;
}

/* All text content elements used are set to have the normal font-style (e.g.
 * summary isn't bold) and also uses Arial or sans-serif as font-family. */
p, address, summary, li, td {
	font-style: normal;
	font-family: Arial, sans-serif;
}

/* Links uses Courier New or sans-serif as style. And uses a color defined by
 * the color palette that'll highlight that it's a link. */
a {
	font-family: "Courier New", sans-serif;
	color: #1a936f;
}

/* Images and tables always fill the width 100%. The top and bottom has a margin
 * of 10px while the sides have none. */
img, table {
	width: 100%;
	margin: 10px 0 10px 0;
}

/* Use border-collapse: collapse so only a single around the cells are
 * displayed. Default behaviour is a border around the table, too. */
table {
	border-collapse: collapse;
}

/* Table headers have a highlighting background color and are always in
 * uppercase. The font family is set to Courier New and text color is white. */
th {
	background-color: #3d518c;
	text-transform: uppercase;
	font-family: "Courier New", sans-serif;
	color: white;
}

/* Limit the width of the description table data. This CSS selector will pick
 * the second td-element and set its max width to 200px.
 * The other td-elements can then freely fill the remaining space. */
td:nth-child(2) {
	max-width: 200px;
}

/* Table data and table headers have a padding of 0.5rem (relative size from
 * root text size) and the containing text is aligned to the left instead of the
 * middle. */
td, th {
	padding: 0.5rem;
	text-align: left;
}


/* Header text content such as nav, h1, breadcrumbs, legends and labels are
 * always uppercase and uses the Courier New font family. They also use a
 * highlighting text color. */
nav, h1, h2, h3, h4, ol.breadcrumb, ol.breadcrumb > li, ol.breadcrumb > li > a, fieldset legend, label {
	text-transform: uppercase;
	font-family: "Courier New", sans-serif;
	color: #1a936f;
}

/* Change so that h2, h3 and h4 uses a margin-bottom that is only 10% of the
 * default margin-bottom. */
h2, h3, h4 {
	margin-bottom: 0.1em;
}

/* Style images within the navigation bar. All images should be within a link. */
nav > a > img {
	height: 100%; /* Set height to fill available navigation bar space. */
	width: 50px;
	margin-top: -1px;
	margin-bottom: 0;
	padding: 0;
}

/* The navigation bar is fixed to the top of the page and is always shown even
 * when scrolling. It is forced to be located at the leftmost-topmost location
 * of the document. */
header {
	position: fixed;
	height: 51px;
	width: 100%;
	top: 0;
	left: 0;
	background-color: #3d518c;
}

nav > ul, nav > a {
	display: block;
	float: left;
	height: 51px;
}

/* Style both navigation bar lists and sub-lists. This will remove the bullet
 * for each list item and override the default margin and padding with none. */
nav > ul, nav > ul > li > ul {
	list-style-type: none;
	margin: 0;
	padding: 0;
	overflow: hidden;
}

/* All list items are floated to the left (excluding the sub-list items). */
nav > ul > li {
	float: left;
}

/* Links inside the navigation bar list items are styled as a button that'll
 * fill the height of the navigation bar. The content is padded and text is
 * center aligned. The default underline text decoration is removed. */
nav > ul > li a {
	display: block;
	color: white;
	text-align: center;
	padding: 16px 16px;
	text-decoration: none;
}

/* The sub-lists are not displayed per default and uses the same background as a
 * hovered list item. */
nav > ul > li > ul {
	display: none;
	background-color: #3d518c;
}

/* Display the sub-list when their parent list item is hovered. The list has a
 * z-index of 1 so its displayed above the content below (such as the main
 * container). This also requires an absolute positioning so it doesn't push
 * around other content. */
nav > ul > li:hover > ul {
	z-index: 1;
	position: absolute;
	display: inline-block;
	margin: 0;
}

/* Hovered list items are highlighted in the navigation bar. Also list items
 * marked with the active class are styled with a highlighted background. */
nav > ul > li a:hover, nav > a:hover, nav > ul > li.active a  {
	background-color: #1a936f;
}

/* Hide hamburger menu per default, only displayed for low resolution devices.
 * */
nav > input[type=checkbox], nav > span {
	display: none;
}

/* Pad the main container with 51px (height of navigation bar) and set a bottom
 * padding that 10 times more that the original root browser padding (more than
 * the height of the footer). */
body > main {
	padding-top: 51px;
	padding-bottom: 10rem;
}

/* Override the default ordered list list-style with none and remove padding. */
ol.breadcrumb {
	list-style: none;
	padding: 0;
}

/* The list items within a breadcrumb list are displayed after each other
 * instead of below. */
ol.breadcrumb li {
	display: inline;
	margin-right: 10px;
}

/* Before each list items a '/' character and a 'no-break space' character is
 * added. The space character enforces that a space is added and not
 * automatically removed by the browser, like a regular space. */
ol.breadcrumb li:before {
	color: black;
	content: "/\00a0";
}

/* Links in a breadcrumb have the same color as a regular header element. */
ol.breadcrumb li a {
	color: #3d518c;
	text-decoration: none; /* Remove numbering. */
}

/* Display a underline and a different color on hover, the default underline for
 * a-elements has been removed above so it has to be re-added. */
ol.breadcrumb li a:hover {
	color: #1a936f;
	text-decoration: underline;
}

/* Set footer paddings to 1em (same height as the footers default font-size).
 * Use absolute positioning so it doesn't push around other elements. And force
 * it to always be placed at the bottommost-leftmost position of the document.
 */
footer {
	padding-bottom: 1em;
	padding-top: 1em;
	position: absolute;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 8rem;
	z-index: -1;
}

/* Each div inside a footer fills the available height. */
footer > div {
	height: 100%;
}

/* Each section within a row in the footer are floated left so they are placed
 * side by side. An margin-right is set to give some spacing between each
 * section. */
footer > div > section {
	float: left;
	margin-right: 1em;
}

/* Set the main container, navigation bar content, and footer rows to be at most
 * 800px wide and centered in the middle of the document. */
main, nav, footer > div {
	max-width: 800px;
	margin: 0 auto;
}

/* Set another border with a color from the palette. It's forced to be 25em (it
 * looks weird when it's too wide). Also use paddings that looks nice. The
 * margin is set to auto so it'll be placed in the middle of its parent. */
fieldset {
	border: 2px solid #c6dabf;
	width: 25em;
	padding-top: 30px;
	padding-left: 40px;
	padding-right: 60px;
	padding-bottom: 30px;
	margin: auto;
}

/* Input elements with the 'type="text"' attribute, select and textarea fills
 * the width of their parent and has a border with a color from the palette. The
 * font-size is somewhat larger that the original (5%). */
input[type="text"], select, textarea {
	width: 100%;
	border: 1px solid #c6dabf;
	padding: 7px;
	font-size: 1.05em;
}

/* Input elements with the 'type="submit"' and 'type="reset"' (buttons) and the
 * a.connect-button element are styled as larger buttons. */
input[type="submit"], input[type="reset"], a.connect-button {
	display: inline-block; /* Allow button to be on the same row. */
	text-transform: uppercase; /* Always show text as uppercase. */
	text-decoration: none; /* Remove underline for links. */
	font-family: "Courier New", sans-serif;
	font-size: 1.05em; /* Make text 5% larger than original. */
	color: #fff;
	padding: 8px 12px;
	border: none; /* Remove border. */
}

/* Display a pointer cursor when hovering the buttons. */
input[type="submit"]:hover, input[type="reset"]:hover, a.connect-button {
	cursor: pointer;
}

/* Set a green background-color from the palette. */
input[type="submit"], a.connect-button {
	background-color: #1a936f;
}

/* Set a red background-color (didnt't exist in the palette). */
input[type="reset"] {
	background-color: indianred;
}

/* Fix offset anchor due to fixed navbar.
 * This will add a block element above every element containing a id attribute
 * that'll "offset" the element with 51px (the height of the navigation bar). */
[id]:before {
  display: block;
  content: " ";
  margin-top: -51px;
  height: 51px;
  visibility: hidden;
}

@media only screen and (max-width: 800px) {
	/* Reset the width so we do not get any overflow. */
	html, body, main, footer, fieldset {
		width: initial;
	}

	/* Due to resetting the with of main to 'initial' above, paddings has to
	 * be added so the text isn't directly against the sides of the
	 * viewport. */
	main, footer {
		padding-left: 20px;
		padding-right: 20px;
	}

	/* Position the logotype in the middle of the nav bar instead. */
	nav > a {
		position: absolute;
		top: 0;
		left: 50%;

		/* Offset with -25px because image is 50px wide. */
		margin-left: -25px;
	}

	/* Move the ul-list (menu items) to the outside of the viewport. */
	nav > ul {
		position: absolute;
		height: initial;
		width: 200px;
		top: 51px;

		z-index: 1;

		background: #3d518c;
		list-style-type: none;

		transform-origin: 0% 0%;
		transform: translate(-100%, 0);

		transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0);
	}

	/* Each list item should fill the width instead. */
	nav > ul > li {
		width: 100%;
	}

	/* The sub-menus are displayed as top level menus instead. */
	nav > ul > li > ul {
		display: block;
	}

	/* Move the menu into the viewport when the hamburger menu has been
	 * clicked. */
	nav > input:checked ~ ul {
		transform: none;
	}

	/* A checkbox is used to register the state of the menu, it's
	 * transparent and is placed above the hamburger menu. */
	nav > input[type=checkbox] {
		display: block;

		/* Somewhat larger area than the actual button,
		 * makes it more simple to click the element for mobile users.
		 */
		width: 100px;
		height: 60px;

		position: absolute;

		cursor: pointer;

		opacity: 0;
		z-index: 2;
	}

	/* 3 spans within a nav creates a hamburger menu that transitions into
	 * a X. */
	nav > span {
		display: block;
		width: 42px;
		height: 5px;
		margin-top: 9px; /* (51px - (3 * 5px)) / 4 = 9 */
		margin-left: 6px;
		position: relative;

		background: white;
		border-radius: 3px;

		z-index: 1;
		transform-origin: 0 0;

		transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
		background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
		opacity 0.55s ease;
	}

	nav > span:first-child {
		transform-origin: 0% 0%;
	}

	nav > span:nth-last-child(2) {
		transform-origin: 0% 100%;
	}

	nav > input:checked ~ span {
		opacity: 1;
		transform: rotate(45deg);
	}

	nav > input:checked ~ span:nth-last-child(3) {
		opacity: 0;
		transform: rotate(0deg) scale(0.2, 0.2);
	}

	nav > input:checked ~ span:nth-last-child(2) {
		transform: rotate(-45deg);
	}
}
